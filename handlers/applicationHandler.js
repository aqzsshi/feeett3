const { ModalBuilder, TextInputBuilder, TextInputStyle, ActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder, InteractionType } = require('discord.js');
const path = require('path');
const fs = require('fs');

const data = {
  name: '–∑–∞—è–≤–∫–∞',
  description: '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ —Å–µ–º—å—é',
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ä–≤–µ—Ä–∞
function getServerConfig(guildId) {
  const configPath = path.join(__dirname, 'serverConfigs.json');
  try {
    if (fs.existsSync(configPath)) {
      const serverConfigs = JSON.parse(fs.readFileSync(configPath, 'utf8'));
      return serverConfigs[guildId]?.applications || null;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞:', error);
  }
  return null;
}

async function execute(interaction, client) {
  const guildId = interaction.guild.id;
  const serverConfig = getServerConfig(guildId);

  if (!serverConfig) {
    return interaction.reply({
      content: '‚ùå –ú–æ–¥—É–ª—å –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É `/–∑–∞—è–≤–∫–∏_–Ω–∞—Å—Ç—Ä–æ–π–∫–∞` –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.',
      ephemeral: true
    });
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º embed —Å –∫–Ω–æ–ø–∫–æ–π
  const startEmbed = new EmbedBuilder()
    .setTitle('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! <:logolight:1366047161451544626> ')
    .setDescription('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ —Å–µ–º—å—é.')
    .setImage(serverConfig.applicationPhotoUrl || 'attachment://FamilyPhoto.png')
    .setColor('#1D1D1E');

  const applicationButton = new ButtonBuilder()
    .setCustomId('apply')
    .setLabel('–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
    .setEmoji('1366047161451544626')
    .setStyle(ButtonStyle.Secondary);

  const replyOptions = {
    embeds: [startEmbed],
    components: [new ActionRowBuilder().addComponents(applicationButton)]
  };

  // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Ñ–æ—Ç–æ, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
  if (!serverConfig.applicationPhotoUrl) {
    replyOptions.files = [path.join(__dirname, 'images', 'FamilyPhoto.png')];
  }

  await interaction.reply(replyOptions);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏ –º–æ–¥–∞–ª–∫–∏
async function handleComponent(interaction, client) {
  if (interaction.isButton() && interaction.customId === 'apply') {
    try {
      const modal = new ModalBuilder()
        .setCustomId('applicationModal')
        .setTitle('–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏')
        .addComponents(
          new ActionRowBuilder().addComponents(
            new TextInputBuilder()
              .setCustomId('realName')
              .setLabel('–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç (–∏—Ä–ª)?')
              .setStyle(TextInputStyle.Short)
              .setRequired(true)
          ),
          new ActionRowBuilder().addComponents(
            new TextInputBuilder()
              .setCustomId('nickname')
              .setLabel('–í–∞—à –Ω–∏–∫ –≤ –∏–≥—Ä–µ?')
              .setStyle(TextInputStyle.Short)
              .setRequired(true)
          ),
          new ActionRowBuilder().addComponents(
            new TextInputBuilder()
              .setCustomId('age')
              .setLabel('–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç (–∏—Ä–ª)?')
              .setStyle(TextInputStyle.Short)
              .setRequired(true)
          ),
          new ActionRowBuilder().addComponents(
            new TextInputBuilder()
              .setCustomId('level')
              .setLabel('–í–∞—à —É—Ä–æ–≤–µ–Ω—å –≤ –∏–≥—Ä–µ?')
              .setStyle(TextInputStyle.Short)
              .setRequired(true)
          ),
          new ActionRowBuilder().addComponents(
            new TextInputBuilder()
              .setCustomId('reason')
              .setLabel('–ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫ –Ω–∞–º?')
              .setStyle(TextInputStyle.Paragraph)
              .setRequired(true)
          )
        );
      await interaction.showModal(modal);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', error);
      await interaction.reply({ content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', ephemeral: true });
    }
    return;
  } else if (interaction.type === InteractionType.ModalSubmit && interaction.customId === 'applicationModal') {
    const guildId = interaction.guild.id;
    const serverConfig = getServerConfig(guildId);

    if (!serverConfig) {
      return interaction.reply({
        content: '‚ùå –ú–æ–¥—É–ª—å –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.',
        ephemeral: true
      });
    }

    await interaction.reply({ content: '‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!', ephemeral: true });
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª
    try {
      const familyChannel = await client.channels.fetch(serverConfig.familyChannelId);
      if (!familyChannel) {
        await interaction.editReply({ content: '‚ùå –û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª —Å–µ–º—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.', ephemeral: true });
        return;
      }
      
      const fields = [
        `1. –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç (–∏—Ä–ª): ${interaction.fields.getTextInputValue('realName')}`,
        `2. –í–∞—à –Ω–∏–∫ –≤ –∏–≥—Ä–µ: ${interaction.fields.getTextInputValue('nickname')}`,
        `3. –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç (–∏—Ä–ª): ${interaction.fields.getTextInputValue('age')}`,
        `4. –í–∞—à —É—Ä–æ–≤–µ–Ω—å –≤ –∏–≥—Ä–µ: ${interaction.fields.getTextInputValue('level')}`,
        `5. –ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫ –Ω–∞–º: ${interaction.fields.getTextInputValue('reason')}`,
      ].join('\n');
      const applicationEmbed = new EmbedBuilder()
        .setTitle('–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ —Å–µ–º—å—é!')
        .setColor('#1D1D1E')
        .setDescription(`–°—Ç–∞—Ç—É—Å: üîµ –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏\n\n${fields}\n\n–ó–∞—è–≤–∫—É –∑–∞–ø–æ–ª–Ω–∏–ª: ${interaction.user}\n–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: \`${formatDate(new Date())}\``);
      const acceptButton = new ButtonBuilder()
        .setCustomId(`accept_${interaction.user.id}`)
        .setLabel('–ü—Ä–∏–Ω—è—Ç—å')
        .setStyle(ButtonStyle.Success);
      const declineButton = new ButtonBuilder()
        .setCustomId(`decline_${interaction.user.id}`)
        .setLabel('–û—Ç–∫–ª–æ–Ω–∏—Ç—å')
        .setStyle(ButtonStyle.Danger);
      await familyChannel.send({
        content: serverConfig.mentionRoleIds.map(id => `<@&${id}>`).join(' '),
        embeds: [applicationEmbed],
        components: [new ActionRowBuilder().addComponents(acceptButton, declineButton)],
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏:', error);
      await interaction.editReply({ content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', ephemeral: true });
    }
  } else if (interaction.isButton() && (interaction.customId.startsWith('accept_') || interaction.customId.startsWith('decline_'))) {
    const userId = interaction.customId.split('_')[1];
    const status = interaction.customId.startsWith('accept_') ? 'üü¢ –ü—Ä–∏–Ω—è—Ç–æ' : 'üî¥ –û—Ç–∫–ª–æ–Ω–µ–Ω–æ';
    const message = interaction.message;
    const embed = message.embeds[0];
    if (!embed || !embed.description) {
      return interaction.reply({ content: '‚ùó –û—à–∏–±–∫–∞: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å. –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.', ephemeral: true });
    }
    let newDescription = embed.description.replace(/–°—Ç–∞—Ç—É—Å: .*/, `–°—Ç–∞—Ç—É—Å: ${status}\n–†–∞—Å—Å–º–æ—Ç—Ä–µ–ª: <@${interaction.user.id}>`);
    const updatedEmbed = EmbedBuilder.from(embed)
      .setDescription(newDescription);
    await message.edit({
      embeds: [updatedEmbed],
      components: [
        new ActionRowBuilder().addComponents(
          message.components?.[0]?.components.map(button => ButtonBuilder.from(button).setDisabled(true)) || []
        )
      ]
    });
    try {
      const user = await client.users.fetch(userId);
      if (user && status === 'üü¢ –ü—Ä–∏–Ω—è—Ç–æ') {
        const guild = interaction.guild || message.guild;
        if (guild) {
          const member = await guild.members.fetch(userId).catch(() => null);
          if (member) {
            const serverConfig = getServerConfig(guild.id);
            if (serverConfig && serverConfig.callRoleIds) {
              for (const roleId of serverConfig.callRoleIds) {
                if (!member.roles.cache.has(roleId)) {
                  await member.roles.add(roleId).catch(() => {});
                }
              }
            }
          }
        }
        const acceptEmbed = new EmbedBuilder()
          .setTitle('üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!')
          .setDescription('–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤–∞—Å –ø—Ä–∏–≥–ª–∞—Å—è—Ç –Ω–∞ –±–µ—Å–µ–¥—É!')
          .setColor('#1D1D1E');
        await user.send({ embeds: [acceptEmbed] });
      } else if (user) {
        const declineEmbed = new EmbedBuilder()
          .setTitle('‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞')
          .setDescription('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å!')
          .setColor('#1D1D1E');
        await user.send({ embeds: [declineEmbed] });
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –õ–° –∏–ª–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏:', err);
    }
    await interaction.reply({ content: `–í—ã –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–∞ **${status}**.`, ephemeral: true });
  }
}

module.exports = { data, execute, handleComponent };

function formatDate(date) {
  return date.toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' }).replace(',', '');
}