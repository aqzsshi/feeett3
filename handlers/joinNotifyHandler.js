const { Events, EmbedBuilder, AttachmentBuilder } = require('discord.js');
const Jimp = require('jimp');
const fs = require('fs');
const path = require('path');

function getJoinConfig(guildId) {
  const configPath = path.join(__dirname, 'serverConfigs.json');
  try {
    if (fs.existsSync(configPath)) {
      const serverConfigs = JSON.parse(fs.readFileSync(configPath, 'utf8'));
      return serverConfigs[guildId]?.joinNotify || null;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞ (joinNotify):', error);
  }
  return null;
}

module.exports = (client) => {
  client.on(Events.GuildMemberAdd, async (member) => {
    try {
      const cfg = getJoinConfig(member.guild.id);
      if (!cfg || !cfg.channelId) return;

      // –†–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const width = 700;
      const height = 250;
      // –°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const image = await Jimp.create(width, height, '#23272A');

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const avatarURL = member.user.displayAvatarURL({ extension: 'png', size: 128 });
      const avatar = await Jimp.read(avatarURL);
      avatar.circle(); // –û–±—Ä–µ–∑–∞–µ–º –≤ –∫—Ä—É–≥
      const avatarSize = 150;
      const avatarX = (width - avatarSize) / 2;
      const avatarY = 30;
      avatar.resize(avatarSize, avatarSize);
      image.composite(avatar, avatarX, avatarY);

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —à—Ä–∏—Ñ—Ç—ã
      const fontBig = await Jimp.loadFont(Jimp.FONT_SANS_32_WHITE);
      const fontSmall = await Jimp.loadFont(Jimp.FONT_SANS_16_WHITE);

      // –ù–∏–∫ (–ø–æ —Ü–µ–Ω—Ç—Ä—É –ø–æ–¥ –∞–≤–∞—Ç–∞—Ä–∫–æ–π)
      image.print(
        fontBig,
        0, avatarY + avatarSize + 10,
        {
          text: `${member.user.username} joined`,
          alignmentX: Jimp.HORIZONTAL_ALIGN_CENTER,
          alignmentY: Jimp.VERTICAL_ALIGN_TOP
        },
        width, 35
      );
      // –¢–µ–≥ (–ø–æ —Ü–µ–Ω—Ç—Ä—É –ø–æ–¥ –Ω–∏–∫–æ–º)
      const discr = member.user.discriminator && member.user.discriminator !== '0' ? `#${member.user.discriminator}` : '';
      image.print(
        fontSmall,
        0, avatarY + avatarSize + 50,
        {
          text: discr,
          alignmentX: Jimp.HORIZONTAL_ALIGN_CENTER,
          alignmentY: Jimp.VERTICAL_ALIGN_TOP
        },
        width, 25
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±—É—Ñ–µ—Ä
      const buffer = await image.getBufferAsync(Jimp.MIME_PNG);
      const attachment = new AttachmentBuilder(buffer, { name: 'welcome.png' });

      // –°–æ–∑–¥–∞—ë–º Embed
      const embed = new EmbedBuilder()
        .setTitle('üëã –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫!')
        .setDescription(`–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º <@${member.id}> –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!`)
        .setColor('#1D1D1E')
        .setImage('attachment://welcome.png')
        .setTimestamp();

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª
      const channel = await member.guild.channels.fetch(cfg.channelId).catch(() => null);
      if (channel && channel.isTextBased()) {
        await channel.send({ embeds: [embed], files: [attachment] });
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–°
      try {
        const dmEmbed = new EmbedBuilder()
          .setTitle('üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!')
          .setDescription(
            '–†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è! –û–∑–Ω–∞–∫–æ–º—å—Å—è —Å –∫–∞–Ω–∞–ª–∞–º–∏ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –æ–±—Ä–∞—Ç–∏—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.'
          )
          .setColor('#1D1D1E');
        await member.send({ embeds: [dmEmbed] });
      } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –õ–° –∑–∞–∫—Ä—ã—Ç—ã
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ welcome-image:', err);
    }
  });
};