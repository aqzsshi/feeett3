const { EmbedBuilder, PermissionsBitField } = require('discord.js');
const ms = require('ms');

const activeSpams = new Map();

const data = {
  name: '—Å–ø–∞–º',
  description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å —á–∞—Ç –≤–Ω–∏–∑ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)',
  options: [
    {
      name: '–≤—Ä–µ–º—è',
      description: '–í—Ä–µ–º—è —Å–ø–∞–º–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 10s, 2m, 1h)',
      type: 3,
      required: false,
    },
    {
      name: '—Å—Ç–æ–ø',
      description: '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º',
      type: 5,
      required: false,
    },
  ],
};

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞
function hasAdminRole(member) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–æ–ª–∏)
  return member.permissions.has('Administrator');
}

async function execute(interaction, client) {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞
  if (!hasAdminRole(interaction.member)) {
    return interaction.reply({
      content: '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.',
      ephemeral: true
    });
  }

  const timeArg = interaction.options.getString('–≤—Ä–µ–º—è');
  const stop = interaction.options.getBoolean('—Å—Ç–æ–ø');
  const channel = interaction.channel;

  if (stop) {
    const spam = activeSpams.get(channel.id);
    if (spam) {
      clearInterval(spam.interval);
      activeSpams.delete(channel.id);
      return interaction.reply('üõë –°–ø–∞–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.');
    } else {
      return interaction.reply('‚ÑπÔ∏è –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∞–º–∞.');
    }
  }

  if (!timeArg) {
    return interaction.reply('‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/—Å–ø–∞–º –≤—Ä–µ–º—è:<–≤—Ä–µ–º—è>` –∏–ª–∏ `/—Å–ø–∞–º —Å—Ç–æ–ø:true`');
  }

  const duration = ms(timeArg);
  if (!duration || duration < 1000) {
    return interaction.reply('‚è± –£–∫–∞–∂–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 10s, 2m, 1h).');
  }

  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  console.log(`[ADMIN] ${interaction.user.tag} –∑–∞–ø—É—Å—Ç–∏–ª —Å–ø–∞–º –≤ –∫–∞–Ω–∞–ª–µ #${channel.name} –Ω–∞ ${ms(duration, { long: true })}`);

  if (activeSpams.has(channel.id)) {
    return interaction.reply('‚ö†Ô∏è –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —É–∂–µ –∏–¥—ë—Ç —Å–ø–∞–º. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π `/—Å–ø–∞–º —Å—Ç–æ–ø:true`.');
  }

  await interaction.reply(`‚úÖ –°–ø–∞–º –Ω–∞—á–∞—Ç –Ω–∞ ${ms(duration, { long: true })}`);

  const interval = setInterval(() => {
    const embed = new EmbedBuilder()
      .setColor('#1D1D1E')
      .setDescription('‚¨áÔ∏è *–ü—Ä–æ–¥–≤–∏–≥–∞–µ–º —á–∞—Ç –≤–Ω–∏–∑...*')
      .setFooter({ text: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–ø–∞–º', iconURL: client.user.displayAvatarURL() });
    channel.send({ embeds: [embed] });
  }, 1000);

  activeSpams.set(channel.id, { interval });

  setTimeout(() => {
    clearInterval(interval);
    activeSpams.delete(channel.id);
    channel.send('üõë –°–ø–∞–º –∑–∞–≤–µ—Ä—à—ë–Ω.');
  }, duration);
}

module.exports = { data, execute };